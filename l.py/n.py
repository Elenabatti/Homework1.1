# Типы данных и переменные
# float, int, boolean, str, list, None
#print('hello world')
#value =None # тип данных None можно присвоить переменной, для того чтобы в дальнейшем использовать её, по другому нельзя
#a = 123
#b = 1.23
#print(type(a)) # такая контструкция с type указывает тип данных 
#print(type(b))
#alue = 12334
#print(type(value))
#s = "hello \nworld" # для того чтобы объявить строку, указываем идентификатор строки и через 
# оператор через одинарные кавычки указываем идентификатор стороки. \n перевод на новую строку
#print(s)#  вывод строки
#print(a, b, s)
#print(a,'-', b,'-', s)
#print('{0} - {2} - {1}'.format(a,b,s))# формат. Если хотим поменять значения при выводе, просто прописываем в скобках индексы
#print(f'{a} - {b} - {s}')# интерполяция. Разделяет строки
#f = True#  логичес
# кая переменная 
#print (f)
#list = ['1','2','3', 'hello', 1,2,3,4.5,True] # списски.  В хранилище можно положить любой тип данных, хотя лучше, чтобы данные были одного типа
#list = ['1','2','3']
#col= ['hello', 1,2,3,4.5,True]
#print (list)
#print (col)
#print('Введите a')
#a = int(input())#  присвоить input.  если требуется целое число то используем такую функцию  int(input)
#print('Введите b')
#b  =int(input())
#print(a, ' + ', b, ' = ', a+b)
#print ('{} {}'.format(a,b))#распечатываем несколькими способами
#print( f'{a} {b}')


# Арифметические операции1
#a=1.32313141551
b= 3
#c= a // b # если хотим получить результат от деления в целых числах то ставим //
#c= a % b # получить остаток от деления
#c= a ** b # возведение в степень **
#c= round(a * b, 5)#ф-ия round, по умолчанию, если накаких аргументов ей кроме самого 
#значения не передавать, то будет произведено округление по математическим правилам
#  если требуется какое-то количество знаков, то через запятую указываем значение
 #
#a +=5# то же самое что и a= a+5
#print(a)


#Логические операции
# >, <=, >, >=, ==, !=,
# not, and, or - yt genfnm c &,|,^
# is, is not, in, not in
# gen

#a = 1 < 4 and 5 > 2
# a = 1 == 2 #  операция сравнения
# a = 1 !=2 #  операция неравентсва
#a= 'qwe'
#b= 'qwe'
#prit (a == b)
#a = [1, 2] #  списки. Элементы будут сравниваться поэлементно
#b = [1, 2]
#print(a == b)

# a = 1 < 3 < 5 < 10 # можно использовать четверные неравенства
#func = 1
#T = 4
#x = 2
#print(func<T>(x))

#f = 1 > 2 or 4 < 6#  дизьюнкция 2х высказываний называется правжой тогда и только тогда когда хотябы одно из 2х высказывания является правдой
#print(f)
#f = [1,2,3,4]
#print(f)
#print(not 2 in f ) #роверка наличия числа в списке. есть ли 2 в списке и наоборот

#is_odd = f[0] % 2 == 0
#print(is_odd)

#is_odd = not f[0] % 2# более пайтоновский вариант записи нахождения четного числа
#print(is_odd)

#  Управляющие конструкции
# if, if-else
 #а








 